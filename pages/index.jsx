import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.scss";

import React from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const guns = [
    { name: "Assault-Rifle", price: 1000 },
    { name: "Sniper", price: 2000 },
    { name: "Shotgun", price: 1500 },
    { name: "Revolver", price: 500 },
    { name: "Machine-Gun", price: 2500 },
    { name: "Pistol", price: 50 },
    { name: "RPG", price: 3000 },
    { name: "Laser-Gun", price: 3500 },
  ];

  const invt = [
    { name: "Medi-Kit", price: 500 },
    { name: "Molotov", price: 1000 },
    { name: "Grenade", price: 1500 },
    { name: "Knife", price: 2000 },
    { name: "Sword", price: 2500 },
    { name: "Armour", price: 3000 },
    { name: "C4", price: 3500 },
    { name: "Landmine", price: 4000 },
  ];

  const [gunsPrice, setGunsPrice] = React.useState(0);
  const [invtPrice, setInvtPrice] = React.useState(0);

  const [gunsList, setGunsList] = React.useState({
    0: 0,
    1: 0,
    2: 0,
    3: 0,
    4: 0,
    5: 0,
    6: 0,
    7: 0,
    8: 0,
    9: 0,
    10: 0,
  });
  const [invtList, setInvtList] = React.useState({
    1: 0,
    2: 0,
    3: 0,
    4: 0,
    5: 0,
    6: 0,
    7: 0,
    8: 0,
    9: 0,
    10: 0,
  });

  function processGun(index, mode) {
    if (mode > 0) {
      gunsList[index] = gunsList[index] + 1;

      let x = 0;
      for (const [key, value] of Object.entries(gunsList)) {
        if (value > 0) {
          x += 1;
        }

        if (x > gunsQuantity) {
          alert(`You can only select upto ${gunsQuantity} of guns!`);
          break;
        }
      }

      setGunsPrice(gunsPrice + guns[index].price);
    } else {
      setGunsPrice(gunsPrice - guns[index].price);
    }

    return 0;
  }
  function processInv(index, mode) {
    if (mode > 0) {
      invtList[index] = invtList[index] + 1;

      let x = 0;
      for (const [key, value] of Object.entries(invtList)) {
        if (value > 0) {
          x += 1;
        }

        if (x > invtQuantity) {
          alert(`You can only select upto ${invtQuantity} of inventories!`);
          break;
        }
      }
      setInvtPrice(gunsPrice + guns[index].price);
    } else {
      setInvtPrice(gunsPrice - guns[index].price);
    }
    return 0;
  }

  const [invtQuantity, setInvtQuantity] = React.useState(0);
  const [gunsQuantity, setGunsQuantity] = React.useState(0);

  const [hydrated, setHydrated] = React.useState(false);

  React.useEffect(() => {
    setHydrated(true);
  }, []);
  if (!hydrated) {
    return null;
  }

  function validateOrder() {
    let x = 0;
    for (const [key, value] of Object.entries(gunsList)) {
      if (value > 0) {
        x += 1;
      }
    }

    if (x != gunsQuantity) {
      alert(
        `You can only select ${gunsQuantity} of guns you only have selected ${x}!`,
      );
    }

    x = 0;
    for (const [key, value] of Object.entries(invtList)) {
      if (value > 0) {
        x += 1;
      }
    }

    if (x != invtQuantity) {
      alert(
        `You can only select ${invtQuantity} of guns you only have selected ${x}!`,
      );
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={`${styles.main} ${inter.className}`}>
        <h3>Gunsmith.onion</h3>

        <div className={styles.cardHolder}>
          <div className={styles.card}>
            <span className={styles.rail}>
              <label>Select Guns Quantity</label>
              <label>
                <input
                  type='number'
                  onInputCapture={(e) => {
                    setGunsQuantity(e.target.value);
                  }}
                />
              </label>
            </span>

            <table>
              <thead>
                <tr>
                  <th>Guns</th>
                  <th>Price</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <br />
                </tr>
                {guns.map((gun, index) => (
                  <tr key={index}>
                    <td>
                      <button
                        onClick={() => {
                          processGun(index, -1);
                        }}
                      >
                        -
                      </button>
                      <label>{gun.name}</label>
                      <button
                        onClick={() => {
                          processGun(index, 1);
                        }}
                      >
                        +
                      </button>
                    </td>
                    <td>{gun.price}</td>
                  </tr>
                ))}

                <tr>
                  <br />
                </tr>

                <tr>
                  <td>Inventory Subtotal</td>
                  <td>${gunsPrice}</td>
                </tr>
              </tbody>
            </table>
          </div>

          <div className={styles.card}>
            <span className={styles.rail}>
              <label>Select Inventory Quantity</label>
              <label>
                <input
                  type='number'
                  onInputCapture={(e) => {
                    setInvtQuantity(e.target.value);
                  }}
                />
              </label>
            </span>

            <table>
              <thead>
                <tr>
                  <th>Inventory</th>
                  <th>Price</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <br />
                </tr>
                {invt.map((inv, index) => (
                  <tr key={index}>
                    <td>
                      <button
                        onClick={() => {
                          processInv(index, -1);
                        }}
                      >
                        -
                      </button>
                      <label>{inv.name}</label>
                      <button
                        onClick={() => {
                          processInv(index, 1);
                        }}
                      >
                        +
                      </button>
                    </td>

                    <td>{inv.price}</td>
                  </tr>
                ))}
                <tr>
                  <br />
                </tr>

                <tr>
                  <td>Inventory Subtotal</td>
                  <td>${invtPrice}</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <button onClick={validateOrder()}>Order Now</button>
      </main>
    </>
  );
}
